import enspire.interactivity.control.*;
import enspire.interactivity.display.*;
import enspire.interactivity.evaluation.*;
import enspire.interactivity.events.*;
import enspire.interactivity.model.*;
import enspire.interactivity.score.*;
import enspire.interactivity.utils.*;
import enspire.interactivity.*;


/*
   Class: SimpleEvaluation
    
	This is the most basic implementation of IEvaluation. This is the Evaluation type you 
	should use if you only need to know the correctness of a users answer, and possibly the number 
	of attempts by the user. If you require more in depth information to be contained within these evaluations, 
	simply extend from this class.
*/
class enspire.interactivity.evaluation.SimpleEvaluation 
	implements IEvaluation {
	
	var correct:Boolean;
	var numTries:Number;
	
	public function SimpleEvaluation() {
		
	}
	
	/* Function: setCorrect
       Function used by an Evaluator when generating this evaluation to set the correctness of the user's 
	   attempt.
    */
	public function setCorrect(correct:Boolean):Void {
		this.correct = correct;
	}
	
	/* Function: getCorrect
       Returns true if the user's most recent attempt at the interactivity was correct, false otherwise.
    */
	public function getCorrect():Boolean {
		return correct;
	}
	
	/* Function: getNumTries
       Returns the number of times that the user has attempted the current interactivity. The first evaluation
	   generated by the activity will return 1 when getNumTries() is called on it.
    */
	public function getNumTries():Number {
		return numTries;
	}
	
	/* Function: setNumTries
       Function used by an Evaluator when generating this evaluation to set the number of attempts/tries by the
	   user.
    */
	public function setNumTries(numTries:Number) {
		this.numTries = numTries;
	}
	
}

