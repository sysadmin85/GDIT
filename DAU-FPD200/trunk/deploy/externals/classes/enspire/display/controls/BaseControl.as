import enspire.core.Server;import enspire.model.Labels;import enspire.model.Configs;import enspire.display.BaseDisplayObject;import enspire.display.Tooltip;class enspire.display.controls.BaseControl extends BaseDisplayObject{	private var mcBg:MovieClip;	private var mcIcon:MovieClip;	private var mcText:MovieClip;	private var mcPulse:MovieClip;	private var sName:String	private var sLabel:String;	private var bTooltip:Boolean;	private var sTip:String;	//	function BaseControl() {		super();		this.sName = this._name.substr(2).toLowerCase();		this.sLabel = Labels.getLabel(sName);		this.sTip = Labels.getLabel(sName+"_tip") 		if(this.sTip == undefined) {			this.sTip = this.sLabel;		}		// set icon		setIcon(this.sLabel);		// set text		setText(this.sLabel);				this.bTooltip = Configs.getConfig("bTooltips") ? true : false;				// format button text		if(Configs.getConfig("bFormatButton") == true){			formatButton();		}	}	public function init() {		this.onRollOver = function() {			this.gotoAndPlay("over");			if(this.bTooltip) {				Tooltip.create(this, this.sTip);			}		}		this.onReleaseOutside = function() {			this.gotoAndPlay("out");			if(this.bTooltip) {				Tooltip.destroy();			}		}		this.onRollOut = function () {			this.gotoAndPlay("out");			if(this.bTooltip) {				Tooltip.destroy();			}		}		this.onRelease = function() {			Server.run(this.sName);			this.gotoAndStop("overNoOut");			toggleButton();		}		this.onPress = function() {			this.gotoAndStop("down");		}	}	public function getName() {		return this.sName;	}	public function enableTooltip(b:Boolean) {		this.bTooltip = b;	}	public function setText(sTxt:String) {		this.mcText.tf.htmlText = sTxt;			}	public function setIcon(sIcon:String) {		this.mcIcon.gotoAndStop(sIcon);	}	public function show() {		this._visible = true;	}	public function hide() {		this._visible = false;	}	public function setEnabled(b:Boolean) {		this.enabled = b;		this.tabEnabled = b; 		if(b) {			this.gotoAndStop("up");		}else{			this.gotoAndStop("disabled");			if(this.bTooltip) {				Tooltip.destroy();			}		}	}	public function reset() {		this.gotoAndStop("overNoOut");		this.mcPulse.gotoAndStop("init");	}		public function pulse() {		this.mcPulse.gotoAndPlay("loop");	}	public function formatButton() {			}	public function toggleButton() {			}	public function toString() {		return "enspire.display.controls.BaseControl";	}}